@page "/QuartzDashboard"

@model OpenDeepSpace.QuartzDashboard.Pages.QuartzDashboardModel
@{
    Layout = "QuartzDashboardLayout";
}
<div id="main">
    <el-container>
        <el-header style="padding: 0;">
            <!-- 头部样式 -->
            <el-menu :default-active="activeIndex" mode="horizontal" background-color="#fcfcfc">
                <el-menu-item index="1">QuartzDashboard</el-menu-item>
                <el-menu-item index="2">任务列表</el-menu-item>
            </el-menu>
        </el-header>
        <el-main>
            <el-form>
                <!--通过任务组 任务名称 搜索指定任务-->
                <el-row type="flex" align="middle">
                    <el-form-item prop="SJobGroupName">
                            <el-input v-model="searchForm.SJobGroupName" placeholder="请输入任务组名称"></el-input>
                        </el-form-item>
                        <el-form-item 
                                      prop="SJobName"
                                      >
                            <el-input v-model="searchForm.SJobName" placeholder="请输入任务名称"></el-input>
                        </el-form-item>
                        <el-form-item>
                            <el-button type="primary" size="medium" @@click="SearchJob">搜索</el-button>

                        </el-form-item>

                </el-row>
            </el-form>

            <el-row type="flex" align="middle">
                <el-col :span="24" style="padding: 10px 0 0 0;">
                    <el-table ref="tb" :data="tableData" border stripe style="width: 100%;" highlight-current-row
                              :header-cell-style="{backgroundColor:'#F5F7FA',color:'#000000'}" @@current-change="handleSelect">
                        <el-table-column prop="jobGroupName" label="任务组名称" align="center">
                        </el-table-column>
                        <el-table-column prop="jobName" label="任务名称" align="center">
                        </el-table-column>
                        <el-table-column prop="startTime" label="开始执行时间"  align="center">
                        </el-table-column>
                        <el-table-column prop="previousFireTime" label="上次执行时间" align="center">
                        </el-table-column>
                        <el-table-column prop="nextFireTime" label="下次执行时间" align="center">
                        </el-table-column>
                        <el-table-column prop="endTime"  label="结束时间" align="center">
                        </el-table-column>
                        <el-table-column prop="displayState" label="状态" align="center">
                        </el-table-column>
                        <el-table-column prop="scheduleExpression" label="执行计划"  align="center">
                        </el-table-column>
                        <el-table-column prop="scheduleExpressionDescription" label="执行计划描述"  align="center">
                        </el-table-column>
                        <el-table-column prop="jobDescription" label="任务描述"  align="center">
                        </el-table-column>
                        <el-table-column label="任务数据"  align="center">
                            <template slot-scope="scope">
                                <el-button type="default" size="mini" @@click="ShowJobDataDialog(scope.row)">任务数据</el-button>
                            </template>
                        </el-table-column>
                        <el-table-column label="操作" align="center" fixed="right" width="600">
                            <template slot-scope="scope">
                                <el-button type="success" size="mini" icon="el-icon-video-pause" @@click="Suspend(scope.row)">暂停</el-button>
                                <el-button type="warning" size="mini" icon="el-icon-open" @@click="Resume(scope.row)">恢复执行</el-button>
                                <el-button type="danger" size="mini" icon="el-icon-video-play" @@click="ImmediatelyExecute(scope.row)">立即执行</el-button>
                                <el-button type="danger" size="mini" icon="el-icon-delete-solid" @@click="Delete(scope.row)">删除</el-button>
                            </template>
                        </el-table-column>
                    </el-table>
                </el-col>
            </el-row>

            <div class="tabListPage">
            <el-pagination @@size-change="handleSizeChange" 
                           @@current-change="handleCurrentChange" 
                           :current-page="currentPage" 
                           :page-sizes="pageSizes" 
                           :page-size="PageSize" layout="total, sizes, prev, pager, next, jumper" 
                           :total="totalCount">
              </el-pagination>
        </div>


                    <el-dialog
                            title="任务数据"
                            :visible.sync="JobDataDialogVisible"
                            :data="JobData"
                            width="30%">
                            <span>{{JobData}}</span> 
                        </el-dialog>
        </el-main>

        

    </el-container>
</div>
@section Scripts{
    <script>
        new Vue({
            el: "#main",
            data() {
                return {
                    activeIndex: '2',
                    tableData:[],
                    dialogFormVisible: false,
                    dialogRecordVisible: false,
                    JobDataDialogVisible:false,
                    JobData:"",
                    searchForm: {
                        "SJobGroupName":"",
                        "SJobName":""
                    },
                    currentPage: 1,
                    totalCount: 0,
                    pageSize: 20,
                    PageSize: 20,
                    pageSizes: [20, 40, 60, 80],
                    selectrow: ""
                   
                }
            },
            mounted: function () {
                 this.getAllJobs();
                this.timer = window.setInterval(() => {
                    setTimeout(() => {
                        this.getAllJobs();
                    },0)
                },1000)

            },
            methods: {
                 
                ShowJobDataDialog(row)
                {
                    this.JobDataDialogVisible = true,
                    this.JobData=row.jobData

                },
                handleSelect(val) {
                    this.selectrow = val;
                },
                handleSizeChange(size) {
                    this.currentPage = 1;
                    this.pageSize = size;
                    this.getAllJobs();
                },
                handleCurrentChange(page) {
                    this.currentPage = page;
                    this.getAllJobs();
                },
                getAllJobs()
                {
                    var that = this;
                    let requestData={
                        "JobGroupName":this.searchForm.SJobGroupName,
                        "JobName":this.searchForm.SJobName,
                        "CurrentPage":this.currentPage,
                        "PageSize":this.pageSize
                    }

                    axios.post("?handler=AllJobs",requestData).then(function (res) {
 
                        that.tableData = res.data.jobDetails;
                        that.totalCount=res.data.totalCount;
                        
                    });

                },
                SearchJob()
                {
                    this.currentPage = 1;
                    this.getAllJobs();
                },
                Suspend(row)
                {
                    let jobKey={
                        "name":row.jobName,
                        "group":row.jobGroupName
                    }

                     axios.post("?handler=SuspendJob",jobKey).then(function (res) {
 
                        if(res.data.success==false)
                        {
                            ELEMENT.MessageBox.alert('暂停Job失败:'+res.failedMsg,"系统提示");
                        }
                        else
                        {
                             ELEMENT.MessageBox.alert('暂停Job成功',"系统提示");
                        }

                        
                    });
                },
                Resume(row)
                {
                    let jobKey={
                        "name":row.jobName,
                        "group":row.jobGroupName
                    }

                     axios.post("?handler=ResumeJob",jobKey).then(function (res) {
 
                        if(res.data.success==false)
                        {
                            ELEMENT.MessageBox.alert('恢复Job失败:'+res.failedMsg,"系统提示");
                        }
                        else
                        {
                             ELEMENT.MessageBox.alert('恢复Job成功',"系统提示");
                        }

                        
                    });
                },
                ImmediatelyExecute(row)
                {
                    let jobKey={
                        "name":row.jobName,
                        "group":row.jobGroupName
                    }

                     axios.post("?handler=ImmediatelyExecuteJob",jobKey).then(function (res) {
 
                        if(res.data.success==false)
                        {
                            ELEMENT.MessageBox.alert('立即执行Job失败:'+res.failedMsg, "系统提示");
                        }
                        else
                        {
                             ELEMENT.MessageBox.alert('立即执行Job成功', "系统提示");
                        }

                        
                    });
                },
                Delete(row)
                {
                    let jobKey={
                        "name":row.jobName,
                        "group":row.jobGroupName
                    }

                     axios.post("?handler=DeleteJob",jobKey).then(function (res) {
 
                        if(res.data.success==false)
                        {
                            ELEMENT.MessageBox.alert('删除Job失败:'+res.failedMsg, "系统提示");
                        }
                        else
                        {
                             ELEMENT.MessageBox.alert('删除Job成功', "系统提示");
                        }

                        
                    });
                }



            },
            filters: {
                
            }
        });
    </script>
}